#!/bin/bash

# üîç Script de Verificaci√≥n del Sistema - ServiTech
# Verifica el estado de todos los componentes

echo ""
echo "üîç ===== VERIFICACI√ìN DEL SISTEMA SERVITECH ====="
echo "üìÖ $(date)"
echo ""

# Colores
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# Funci√≥n de verificaci√≥n
check_service() {
    if $1; then
        echo -e "${GREEN}‚úÖ $2${NC}"
        return 0
    else
        echo -e "${RED}‚ùå $2${NC}"
        return 1
    fi
}

echo -e "${BLUE}üì¶ VERIFICANDO DEPENDENCIAS...${NC}"
echo ""

# Verificar Node.js
if command -v node &> /dev/null; then
    NODE_VERSION=$(node --version)
    echo -e "${GREEN}‚úÖ Node.js: $NODE_VERSION${NC}"
else
    echo -e "${RED}‚ùå Node.js no instalado${NC}"
fi

# Verificar npm
if command -v npm &> /dev/null; then
    NPM_VERSION=$(npm --version)
    echo -e "${GREEN}‚úÖ npm: $NPM_VERSION${NC}"
else
    echo -e "${RED}‚ùå npm no instalado${NC}"
fi

# Verificar PM2
if command -v pm2 &> /dev/null; then
    PM2_VERSION=$(pm2 --version)
    echo -e "${GREEN}‚úÖ PM2: $PM2_VERSION${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  PM2 no instalado (opcional para producci√≥n)${NC}"
fi

echo ""
echo -e "${BLUE}üóÑÔ∏è  VERIFICANDO BASE DE DATOS...${NC}"
echo ""

# Verificar MongoDB
if systemctl is-active --quiet mongod 2>/dev/null; then
    echo -e "${GREEN}‚úÖ MongoDB: Corriendo (systemctl)${NC}"
elif pgrep mongod > /dev/null; then
    echo -e "${GREEN}‚úÖ MongoDB: Corriendo (proceso)${NC}"
else
    echo -e "${RED}‚ùå MongoDB: No est√° corriendo${NC}"
    echo -e "${YELLOW}üí° Iniciar con: sudo systemctl start mongod${NC}"
fi

# Verificar conexi√≥n MongoDB
if command -v mongosh &> /dev/null; then
    if mongosh --eval "db.runCommand({ connectionStatus: 1 })" &> /dev/null; then
        echo -e "${GREEN}‚úÖ Conexi√≥n MongoDB: OK${NC}"
    else
        echo -e "${RED}‚ùå Conexi√≥n MongoDB: Fall√≥${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  mongosh no instalado${NC}"
fi

echo ""
echo -e "${BLUE}üöÄ VERIFICANDO PROYECTO...${NC}"
echo ""

# Verificar directorio del proyecto
if [[ -f "package.json" ]]; then
    echo -e "${GREEN}‚úÖ package.json encontrado${NC}"
else
    echo -e "${RED}‚ùå package.json no encontrado${NC}"
    echo -e "${YELLOW}üí° Ejecuta desde el directorio backend/${NC}"
fi

# Verificar src/app.js
if [[ -f "src/app.js" ]]; then
    echo -e "${GREEN}‚úÖ src/app.js encontrado${NC}"
else
    echo -e "${RED}‚ùå src/app.js no encontrado${NC}"
fi

# Verificar archivo .env
if [[ -f ".env" ]]; then
    echo -e "${GREEN}‚úÖ Archivo .env encontrado${NC}"
    
    # Verificar variables cr√≠ticas
    if grep -q "MONGODB_URI" .env; then
        echo -e "${GREEN}‚úÖ Variable MONGODB_URI configurada${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Variable MONGODB_URI no encontrada${NC}"
    fi
    
    if grep -q "JWT_SECRET" .env; then
        echo -e "${GREEN}‚úÖ Variable JWT_SECRET configurada${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Variable JWT_SECRET no encontrada${NC}"
    fi
    
    if grep -q "PSE_MERCHANT_ID" .env; then
        echo -e "${GREEN}‚úÖ Variables PSE configuradas${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Variables PSE no encontradas${NC}"
    fi
else
    echo -e "${RED}‚ùå Archivo .env no encontrado${NC}"
    echo -e "${YELLOW}üí° Copia .env.example a .env${NC}"
fi

# Verificar node_modules
if [[ -d "node_modules" ]]; then
    echo -e "${GREEN}‚úÖ node_modules encontrado${NC}"
else
    echo -e "${RED}‚ùå node_modules no encontrado${NC}"
    echo -e "${YELLOW}üí° Ejecuta: npm install${NC}"
fi

echo ""
echo -e "${BLUE}üåê VERIFICANDO PUERTOS...${NC}"
echo ""

# Verificar puerto 3000
if lsof -i :3000 &> /dev/null; then
    PROCESS=$(lsof -i :3000 -t)
    echo -e "${GREEN}‚úÖ Puerto 3000: En uso (PID: $PROCESS)${NC}"
    echo -e "${BLUE}   ServiTech probablemente corriendo${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Puerto 3000: Libre${NC}"
fi

# Verificar puerto MongoDB (27017)
if lsof -i :27017 &> /dev/null; then
    echo -e "${GREEN}‚úÖ Puerto 27017: MongoDB corriendo${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Puerto 27017: MongoDB no detectado${NC}"
fi

echo ""
echo -e "${BLUE}üìä ESTADO PM2...${NC}"
echo ""

if command -v pm2 &> /dev/null; then
    PM2_LIST=$(pm2 list 2>/dev/null | grep -c "servitech" || echo "0")
    if [[ $PM2_LIST -gt 0 ]]; then
        echo -e "${GREEN}‚úÖ ServiTech en PM2: Detectado${NC}"
        pm2 list | grep servitech
    else
        echo -e "${YELLOW}‚ö†Ô∏è  ServiTech en PM2: No encontrado${NC}"
    fi
fi

echo ""
echo -e "${BLUE}üß™ PRUEBAS R√ÅPIDAS...${NC}"
echo ""

# Test de conectividad si el servidor est√° corriendo
if lsof -i :3000 &> /dev/null; then
    if curl -s http://localhost:3000 &> /dev/null; then
        echo -e "${GREEN}‚úÖ Servidor HTTP: Responde${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Servidor HTTP: No responde${NC}"
    fi
    
    if curl -s http://localhost:3000/api &> /dev/null; then
        echo -e "${GREEN}‚úÖ API REST: Accesible${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  API REST: No accesible${NC}"
    fi
fi

echo ""
echo -e "${BLUE}üìã RESUMEN...${NC}"
echo ""

# Contar verificaciones
CHECKS_PASSED=0
TOTAL_CHECKS=0

# Aqu√≠ podr√≠as agregar l√≥gica para contar las verificaciones
# Por simplicidad, damos un resumen general

if command -v node &> /dev/null && [[ -f "package.json" ]] && [[ -f ".env" ]]; then
    echo -e "${GREEN}‚úÖ Configuraci√≥n b√°sica: COMPLETA${NC}"
else
    echo -e "${RED}‚ùå Configuraci√≥n b√°sica: INCOMPLETA${NC}"
fi

if systemctl is-active --quiet mongod 2>/dev/null || pgrep mongod > /dev/null; then
    echo -e "${GREEN}‚úÖ Base de datos: OPERATIVA${NC}"
else
    echo -e "${RED}‚ùå Base de datos: NO OPERATIVA${NC}"
fi

if lsof -i :3000 &> /dev/null; then
    echo -e "${GREEN}‚úÖ Servidor: CORRIENDO${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Servidor: DETENIDO${NC}"
fi

echo ""
echo -e "${BLUE}üîß COMANDOS √öTILES:${NC}"
echo ""
echo -e "${YELLOW}  Iniciar desarrollo:${NC}   ./start-dev.sh"
echo -e "${YELLOW}  Iniciar producci√≥n:${NC}   ./start-prod.sh"
echo -e "${YELLOW}  Instalar dependencias:${NC} npm install"
echo -e "${YELLOW}  Iniciar MongoDB:${NC}      sudo systemctl start mongod"
echo -e "${YELLOW}  Ver logs PM2:${NC}         pm2 logs servitech"
echo ""

echo -e "${BLUE}üß™ TESTING:${NC}"
echo -e "${YELLOW}  Test servidor:${NC}        ./test_server_quick.sh"
echo -e "${YELLOW}  Test mensajer√≠a:${NC}      ../test_mensajeria_completa.html"
echo ""

echo "üîç ===== VERIFICACI√ìN COMPLETADA ====="
echo ""
